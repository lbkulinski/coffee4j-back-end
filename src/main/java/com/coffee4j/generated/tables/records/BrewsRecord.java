/*
 * This file is generated by jOOQ.
 */
package com.coffee4j.generated.tables.records;


import com.coffee4j.generated.tables.Brews;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrewsRecord extends UpdatableRecordImpl<BrewsRecord> implements Record5<String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>coffee_log.brews.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>coffee_log.brews.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>coffee_log.brews.user_id</code>.
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>coffee_log.brews.user_id</code>.
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>coffee_log.brews.schema_id</code>.
     */
    public void setSchemaId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>coffee_log.brews.schema_id</code>.
     */
    public String getSchemaId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>coffee_log.brews.field_id</code>.
     */
    public void setFieldId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>coffee_log.brews.field_id</code>.
     */
    public String getFieldId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>coffee_log.brews.field_value</code>.
     */
    public void setFieldValue(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>coffee_log.brews.field_value</code>.
     */
    public String getFieldValue() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record4<String, String, String, String> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Brews.BREWS.ID;
    }

    @Override
    public Field<String> field2() {
        return Brews.BREWS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Brews.BREWS.SCHEMA_ID;
    }

    @Override
    public Field<String> field4() {
        return Brews.BREWS.FIELD_ID;
    }

    @Override
    public Field<String> field5() {
        return Brews.BREWS.FIELD_VALUE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getSchemaId();
    }

    @Override
    public String component4() {
        return getFieldId();
    }

    @Override
    public String component5() {
        return getFieldValue();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getSchemaId();
    }

    @Override
    public String value4() {
        return getFieldId();
    }

    @Override
    public String value5() {
        return getFieldValue();
    }

    @Override
    public BrewsRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public BrewsRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public BrewsRecord value3(String value) {
        setSchemaId(value);
        return this;
    }

    @Override
    public BrewsRecord value4(String value) {
        setFieldId(value);
        return this;
    }

    @Override
    public BrewsRecord value5(String value) {
        setFieldValue(value);
        return this;
    }

    @Override
    public BrewsRecord values(String value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BrewsRecord
     */
    public BrewsRecord() {
        super(Brews.BREWS);
    }

    /**
     * Create a detached, initialised BrewsRecord
     */
    public BrewsRecord(String id, String userId, String schemaId, String fieldId, String fieldValue) {
        super(Brews.BREWS);

        setId(id);
        setUserId(userId);
        setSchemaId(schemaId);
        setFieldId(fieldId);
        setFieldValue(fieldValue);
    }
}
