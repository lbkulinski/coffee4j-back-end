/*
 * This file is generated by jOOQ.
 */
package com.coffee4j.generated;


import com.coffee4j.generated.tables.Brews;
import com.coffee4j.generated.tables.FieldTypes;
import com.coffee4j.generated.tables.Fields;
import com.coffee4j.generated.tables.SchemaFields;
import com.coffee4j.generated.tables.Schemas;
import com.coffee4j.generated.tables.Users;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoffeeLog extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>coffee_log</code>
     */
    public static final CoffeeLog COFFEE_LOG = new CoffeeLog();

    /**
     * The table <code>coffee_log.brews</code>.
     */
    public final Brews BREWS = Brews.BREWS;

    /**
     * The table <code>coffee_log.field_types</code>.
     */
    public final FieldTypes FIELD_TYPES = FieldTypes.FIELD_TYPES;

    /**
     * The table <code>coffee_log.fields</code>.
     */
    public final Fields FIELDS = Fields.FIELDS;

    /**
     * The table <code>coffee_log.schema_fields</code>.
     */
    public final SchemaFields SCHEMA_FIELDS = SchemaFields.SCHEMA_FIELDS;

    /**
     * The table <code>coffee_log.schemas</code>.
     */
    public final Schemas SCHEMAS = Schemas.SCHEMAS;

    /**
     * The table <code>coffee_log.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private CoffeeLog() {
        super("coffee_log", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Brews.BREWS,
            FieldTypes.FIELD_TYPES,
            Fields.FIELDS,
            SchemaFields.SCHEMA_FIELDS,
            Schemas.SCHEMAS,
            Users.USERS
        );
    }
}
